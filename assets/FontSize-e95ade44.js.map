{"version":3,"file":"FontSize-e95ade44.js","sources":["../../../../../packages/canvas-tokens-docs/stories/system/examples/FontSize.tsx"],"sourcesContent":["import * as React from 'react';\nimport {system} from '@workday/canvas-tokens-web';\nimport {TokenGrid, formatJSVar} from '../../../components/TokenGrid';\n\ninterface FontSizeToken {\n  /** The name of the CSS variable */\n  cssVar: string;\n  /** The formatted name of the JS variable */\n  jsVar: React.ReactNode;\n  /** The actual string value of the token */\n  value: string;\n  /** The value of the CSS token after converting rem to pixels */\n  pxValue: string;\n}\nsystem.fontSize;\nconst fontSizeTokens = Object.keys(system.fontSize).reduce((acc, level) => {\n  const levelSizes = system.fontSize[level as keyof typeof system.fontSize];\n  const levelTokens = Object.entries(levelSizes).map(([size, varName]) => {\n    const value = getComputedStyle(document.documentElement).getPropertyValue(varName);\n    const pxValue = Number(value.replace('rem', '')) * 16;\n    return {\n      cssVar: varName,\n      jsVar: formatJSVar(`system.fontSize.${level}.${size}`),\n      value,\n      pxValue: `${pxValue}px`,\n    };\n  });\n  return acc.concat(...levelTokens);\n}, [] as FontSizeToken[]);\n\nexport function FontSizeTokens() {\n  return (\n    <TokenGrid\n      caption=\"font size tokens\"\n      headings={['Sample', 'CSS Variable', 'JS Variable', 'Value', 'Pixel Value']}\n      rows={fontSizeTokens}\n    >\n      {token => (\n        <>\n          <TokenGrid.RowItem>\n            <TokenGrid.Sample style={{fontSize: token.value}}>Canvas</TokenGrid.Sample>\n          </TokenGrid.RowItem>\n\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.cssVar}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.jsVar}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n\n          <TokenGrid.RowItem>{token.value}</TokenGrid.RowItem>\n          <TokenGrid.RowItem>{token.pxValue}</TokenGrid.RowItem>\n        </>\n      )}\n    </TokenGrid>\n  );\n}\n"],"names":["fontSizeTokens","system.fontSize","acc","level","levelSizes","levelTokens","size","varName","value","pxValue","formatJSVar","FontSizeTokens","jsx","TokenGrid","jsxs","Fragment","token"],"mappings":"mJAeA,MAAMA,EAAiB,OAAO,KAAKC,CAAe,EAAE,OAAO,CAACC,EAAKC,IAAU,CACnE,MAAAC,EAAaH,EAAgBE,CAAqC,EAClEE,EAAc,OAAO,QAAQD,CAAU,EAAE,IAAI,CAAC,CAACE,EAAMC,CAAO,IAAM,CACtE,MAAMC,EAAQ,iBAAiB,SAAS,eAAe,EAAE,iBAAiBD,CAAO,EAC3EE,EAAU,OAAOD,EAAM,QAAQ,MAAO,EAAE,CAAC,EAAI,GAC5C,MAAA,CACL,OAAQD,EACR,MAAOG,EAAY,mBAAmBP,CAAK,IAAIG,CAAI,EAAE,EACrD,MAAAE,EACA,QAAS,GAAGC,CAAO,IAAA,CACrB,CACD,EACM,OAAAP,EAAI,OAAO,GAAGG,CAAW,CAClC,EAAG,CAAqB,CAAA,EAEjB,SAASM,GAAiB,CAE7B,OAAAC,EAACC,EAAA,CACC,QAAQ,mBACR,SAAU,CAAC,SAAU,eAAgB,cAAe,QAAS,aAAa,EAC1E,KAAMb,EAEL,YAEGc,EAAAC,EAAA,CAAA,SAAA,CAAAH,EAACC,EAAU,QAAV,CACC,SAAAD,EAACC,EAAU,OAAV,CAAiB,MAAO,CAAC,SAAUG,EAAM,KAAK,EAAG,iBAAM,CAAA,EAC1D,EAEAJ,EAACC,EAAU,QAAV,CACC,SAAAD,EAACC,EAAU,eAAV,CAA0B,SAAMG,EAAA,MAAA,CAAO,CAC1C,CAAA,EAEAJ,EAACC,EAAU,QAAV,CACC,SAAAD,EAACC,EAAU,eAAV,CAA0B,SAAMG,EAAA,KAAA,CAAM,CACzC,CAAA,EAECJ,EAAAC,EAAU,QAAV,CAAmB,WAAM,MAAM,EAC/BD,EAAAC,EAAU,QAAV,CAAmB,WAAM,QAAQ,CAAA,EACpC,CAAA,CAAA,CAIR"}