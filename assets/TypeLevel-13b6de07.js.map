{"version":3,"file":"TypeLevel-13b6de07.js","sources":["../../../../../packages/canvas-tokens-docs/stories/system/examples/TypeLevel.tsx"],"sourcesContent":["import * as React from 'react';\nimport {system} from '@workday/canvas-tokens-web';\nimport {TokenGrid} from '../../../components/TokenGrid';\n\ninterface TypeLevelToken {\n  label: string;\n  values: object;\n  computedValues: object;\n  formattedValues: object;\n}\n\nfunction getComputedStyleValues(values: object) {\n  const styles = getComputedStyle(document.documentElement);\n  let computedStyleValues = {};\n  for (const key in values) {\n    if (key in values) {\n      const value = styles.getPropertyValue(values[key as keyof typeof values]);\n      computedStyleValues = {...computedStyleValues, [key]: value};\n    }\n  }\n  return computedStyleValues;\n}\n\nfunction formatTypeLevelValues(values: object) {\n  let formattedValues = {};\n  for (const key in values) {\n    if (key in values) {\n      formattedValues = {...formattedValues, [key]: `var(${values[key as keyof typeof values]})`};\n    }\n  }\n  return formattedValues;\n}\n\nconst typeLevelTokens = Object.keys(system.type).reduce((acc, level) => {\n  const levelTokens = Object.entries(system.type[level as keyof typeof system.type]).map(\n    ([size, values]) => {\n      return {\n        label: `.cnvs-sys-type-${level}-${size}`,\n        values: values,\n        formattedValues: formatTypeLevelValues(values),\n        computedValues: getComputedStyleValues(values),\n      };\n    }\n  );\n  return acc.concat(levelTokens);\n}, [] as TypeLevelToken[]);\n\nexport function TypeLevelTokens() {\n  return (\n    <TokenGrid\n      caption=\"Type Level Tokens\"\n      headings={['Sample', 'CSS Class', 'Values', 'Computed Values']}\n      rows={typeLevelTokens}\n    >\n      {token => (\n        <>\n          <TokenGrid.RowItem>\n            <span style={{...token.formattedValues}}>Canvas</span>\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.label}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            {Object.values(token.values).map((value, index) => (\n              <TokenGrid.MonospaceLabel key={index}>{value}</TokenGrid.MonospaceLabel>\n            ))}\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            {Object.entries(token.computedValues).map(([name, value], index) => (\n              <TokenGrid.MonospaceLabel key={index}>\n                {name}: {value}\n              </TokenGrid.MonospaceLabel>\n            ))}\n          </TokenGrid.RowItem>\n        </>\n      )}\n    </TokenGrid>\n  );\n}\n"],"names":["getComputedStyleValues","values","styles","computedStyleValues","key","value","formatTypeLevelValues","formattedValues","typeLevelTokens","system.type","acc","level","levelTokens","size","TypeLevelTokens","jsx","TokenGrid","jsxs","Fragment","token","index","name"],"mappings":"4IAWA,SAASA,EAAuBC,EAAgB,CACxC,MAAAC,EAAS,iBAAiB,SAAS,eAAe,EACxD,IAAIC,EAAsB,CAAA,EAC1B,UAAWC,KAAOH,EAChB,GAAIG,KAAOH,EAAQ,CACjB,MAAMI,EAAQH,EAAO,iBAAiBD,EAAOG,CAA0B,CAAC,EACxED,EAAsB,CAAC,GAAGA,EAAqB,CAACC,CAAG,EAAGC,CAAK,EAGxD,OAAAF,CACT,CAEA,SAASG,EAAsBL,EAAgB,CAC7C,IAAIM,EAAkB,CAAA,EACtB,UAAWH,KAAOH,EACZG,KAAOH,IACSM,EAAA,CAAC,GAAGA,EAAiB,CAACH,CAAG,EAAG,OAAOH,EAAOG,CAA0B,OAGnF,OAAAG,CACT,CAEA,MAAMC,EAAkB,OAAO,KAAKC,CAAW,EAAE,OAAO,CAACC,EAAKC,IAAU,CACtE,MAAMC,EAAc,OAAO,QAAQH,EAAYE,CAAiC,CAAC,EAAE,IACjF,CAAC,CAACE,EAAMZ,CAAM,KACL,CACL,MAAO,kBAAkBU,KAASE,IAClC,OAAAZ,EACA,gBAAiBK,EAAsBL,CAAM,EAC7C,eAAgBD,EAAuBC,CAAM,CAAA,EAEjD,EAEK,OAAAS,EAAI,OAAOE,CAAW,CAC/B,EAAG,CAAsB,CAAA,EAElB,SAASE,GAAkB,CAE9B,OAAAC,EAACC,EAAA,CACC,QAAQ,oBACR,SAAU,CAAC,SAAU,YAAa,SAAU,iBAAiB,EAC7D,KAAMR,EAEL,YAEGS,EAAAC,EAAA,CAAA,SAAA,CAAAH,EAACC,EAAU,QAAV,CACC,SAAAD,EAAC,OAAK,CAAA,MAAO,CAAC,GAAGI,EAAM,eAAA,EAAkB,SAAA,QAAM,CAAA,EACjD,EACAJ,EAACC,EAAU,QAAV,CACC,SAAAD,EAACC,EAAU,eAAV,CAA0B,SAAMG,EAAA,KAAA,CAAM,CACzC,CAAA,EACAJ,EAACC,EAAU,QAAV,CACE,gBAAO,OAAOG,EAAM,MAAM,EAAE,IAAI,CAACd,EAAOe,MACtCJ,EAAU,eAAV,CAAsC,SAARX,CAAA,EAAAe,CAAc,CAC9C,EACH,IACCJ,EAAU,QAAV,CACE,SAAO,OAAA,QAAQG,EAAM,cAAc,EAAE,IAAI,CAAC,CAACE,EAAMhB,CAAK,EAAGe,IACvDH,EAAAD,EAAU,eAAV,CACE,SAAA,CAAAK,EAAK,KAAGhB,CAAA,GADoBe,CAE/B,CACD,EACH,CAAA,EACF,CAAA,CAAA,CAIR"}