{"version":3,"file":"Space-8f16542e.js","sources":["../../../../../packages/canvas-tokens-docs/stories/system/examples/Space.tsx"],"sourcesContent":["import * as React from 'react';\nimport {base, system} from '@workday/canvas-tokens-web';\nimport {TokenGrid} from '../../../components/TokenGrid';\n\ninterface SpaceToken {\n  label: string;\n  value: string;\n  computedValue: string;\n  pxValue: string;\n  varName: string;\n}\n\nfunction multiplyCalcValues(value: string) {\n  // Matches numbers such as .25, 0.25, or 25\n  const numberRegExp = new RegExp(/(0*\\.)?\\d+/g);\n  // Find the numbers in the string value\n  const matches = value.match(numberRegExp);\n  if (matches) {\n    // Multiply the matched values\n    return matches.reduce((acc, current) => acc * Number(current), 1);\n  }\n  // If none exist, return 0\n  return 0;\n}\n\nconst spaceTokens: SpaceToken[] = Object.values(system.space).map(varName => {\n  const value = getComputedStyle(document.documentElement).getPropertyValue(varName);\n  const computedValue = multiplyCalcValues(value);\n  return {\n    label: varName,\n    value: value,\n    computedValue: `${computedValue}rem`,\n    varName,\n    pxValue: `${computedValue * 16}px`,\n  };\n});\n\nexport function SpaceTokens() {\n  return (\n    <TokenGrid\n      caption=\"space tokens\"\n      headings={['Sample', 'Name', 'Value', 'Computed Value', 'Pixel Value']}\n      rows={spaceTokens}\n    >\n      {token => (\n        <>\n          <TokenGrid.RowItem>\n            <TokenGrid.Sample\n              style={{\n                width: token.value,\n                backgroundColor: `var(${base.blueberry400})`,\n              }}\n            />\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.label}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>{token.value}</TokenGrid.RowItem>\n          <TokenGrid.RowItem>{token.computedValue}</TokenGrid.RowItem>\n          <TokenGrid.RowItem>{token.pxValue}</TokenGrid.RowItem>\n        </>\n      )}\n    </TokenGrid>\n  );\n}\n"],"names":["multiplyCalcValues","value","numberRegExp","matches","acc","current","spaceTokens","system.space","varName","computedValue","SpaceTokens","jsx","TokenGrid","jsxs","Fragment","token","base.blueberry400"],"mappings":"oLAYA,SAASA,EAAmBC,EAAe,CAEnC,MAAAC,EAAe,IAAI,OAAO,aAAa,EAEvCC,EAAUF,EAAM,MAAMC,CAAY,EACxC,OAAIC,EAEKA,EAAQ,OAAO,CAACC,EAAKC,IAAYD,EAAM,OAAOC,CAAO,EAAG,CAAC,EAG3D,CACT,CAEA,MAAMC,EAA4B,OAAO,OAAOC,CAAY,EAAE,IAAeC,GAAA,CAC3E,MAAMP,EAAQ,iBAAiB,SAAS,eAAe,EAAE,iBAAiBO,CAAO,EAC3EC,EAAgBT,EAAmBC,CAAK,EACvC,MAAA,CACL,MAAOO,EACP,MAAAP,EACA,cAAe,GAAGQ,OAClB,QAAAD,EACA,QAAS,GAAGC,EAAgB,MAAA,CAEhC,CAAC,EAEM,SAASC,GAAc,CAE1B,OAAAC,EAACC,EAAA,CACC,QAAQ,eACR,SAAU,CAAC,SAAU,OAAQ,QAAS,iBAAkB,aAAa,EACrE,KAAMN,EAEL,YAEGO,EAAAC,EAAA,CAAA,SAAA,CAACH,EAAAC,EAAU,QAAV,CACC,SAAAD,EAACC,EAAU,OAAV,CACC,MAAO,CACL,MAAOG,EAAM,MACb,gBAAiB,OAAOC,IAC1B,CAAA,CAAA,EAEJ,EACAL,EAACC,EAAU,QAAV,CACC,SAAAD,EAACC,EAAU,eAAV,CAA0B,SAAMG,EAAA,KAAA,CAAM,CACzC,CAAA,EACCJ,EAAAC,EAAU,QAAV,CAAmB,WAAM,MAAM,EAC/BD,EAAAC,EAAU,QAAV,CAAmB,WAAM,cAAc,EACvCD,EAAAC,EAAU,QAAV,CAAmB,WAAM,QAAQ,CAAA,EACpC,CAAA,CAAA,CAIR"}