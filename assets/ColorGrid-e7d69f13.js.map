{"version":3,"file":"ColorGrid-e7d69f13.js","sources":["../../../../../packages/canvas-tokens-docs/components/ColorGrid.tsx"],"sourcesContent":["import * as React from 'react';\nimport {TokenGrid, formatJSVar} from './TokenGrid';\n\nconst sortMap: Record<string, number> = {\n  softest: 0,\n  softer: 1,\n  soft: 2,\n  default: 3,\n  strong: 4,\n  stronger: 5,\n  strongest: 6,\n};\n\nconst purposeMap: Record<string, string> = {\n  'system.color.bg.default': 'Main page background',\n  'system.color.bg.transparent.default': 'Transparent background',\n  'system.color.bg.transparent.strong': 'Transparent background for inverse hover states',\n  'system.color.bg.transparent.stronger': 'Transparent background for inverse active states',\n  'system.color.bg.translucent': 'Darkest transparent background',\n  'system.color.bg.overlay': 'Overlay background for modal dialogs',\n  'system.color.bg.primary.soft': 'Disabled primary (blue) background',\n  'system.color.bg.primary.default': 'Primary (blue) default background',\n  'system.color.bg.primary.strong': 'Primary (blue) hover background',\n  'system.color.bg.primary.stronger': 'Primary (blue) active background',\n  'system.color.bg.caution.softer': 'Caution subtle background',\n  'system.color.bg.caution.default': 'Caution default background',\n  'system.color.bg.caution.strong': 'Caution hover background',\n  'system.color.bg.caution.stronger': 'Caution active background',\n  'system.color.bg.critical.softer': 'Error disabled background',\n  'system.color.bg.critical.default': 'Error default background',\n  'system.color.bg.critical.strong': 'Error hover background',\n  'system.color.bg.positive.softer': 'Success surface background',\n  'system.color.bg.positive.default': 'Success default background',\n  'system.color.bg.positive.strong': 'Success hover background',\n  'system.color.bg.positive.stronger': 'Success active background',\n  'system.color.bg.muted.softer': 'Muted background (subtle). Light containers.',\n  'system.color.bg.muted.soft': 'Muted background (soft). Form backgrounds.',\n  'system.color.bg.muted.default': 'Muted background (default). Input fields, inactive elements.',\n  'system.color.bg.muted.strong': 'Muted strong background. Switch toggles, loading indicators.',\n  'system.color.bg.alt.softer': 'Disabled input background',\n  'system.color.bg.alt.soft': 'Alternative page background, disabled secondary surfaces',\n  'system.color.bg.alt.default': 'Secondary surface background',\n  'system.color.bg.alt.strong': 'Secondary hover background',\n  'system.color.bg.alt.stronger': 'Secondary active background',\n  'system.color.bg.contrast.default': 'Contrast background (default), like Tooltip background.',\n  'system.color.bg.contrast.strong':\n    'Contrast background for high-contrast text container background',\n  'system.color.fg.default': 'Body foreground',\n  'system.color.fg.strong': 'Headings',\n  'system.color.fg.stronger': 'Display titles',\n  'system.color.fg.primary.default': 'Link foreground',\n  'system.color.fg.primary.strong': 'Link foreground hover',\n  'system.color.fg.caution.default': 'Caution foreground',\n  'system.color.fg.critical.default': 'Error foreground',\n  'system.color.fg.inverse': 'Inverse (white) foreground',\n  'system.color.fg.disabled': 'Disabled foreground',\n  'system.color.fg.muted.soft': 'Muted foreground (soft)',\n  'system.color.fg.muted.default': 'Muted foreground (default)',\n  'system.color.fg.muted.strong': 'Muted foreground (strong)',\n  'system.color.fg.muted.stronger': 'Muted foreground (stronger)',\n  'system.color.border.contrast.default':\n    'Contrast border for card outline, divider on light surfaces',\n  'system.color.border.contrast.strong': 'High-contrast outlines or focus states border',\n  'system.color.border.primary.default': 'Primary active input border',\n  'system.color.border.caution.default': 'Warning border (inner)',\n  'system.color.border.caution.strong': 'Warning border (outer)',\n  'system.color.border.critical.default': 'Error border',\n  'system.color.border.inverse': 'Inverse border for containers with contrast background.',\n  'system.color.border.transparent': 'Transparent border or border color placeholder',\n  'system.color.border.ai': 'AI-related components border',\n  'system.color.border.input.disabled': 'Disabled input border',\n  'system.color.border.input.default': 'Default input border',\n  'system.color.border.input.strong': 'Hover input border',\n  'system.color.border.input.inverse': 'Inverse input border',\n  'system.color.border.divider':\n    'Divider/separator border, like table rows, content separators, etc.',\n  'system.color.border.container': 'Container border (card/table edge).',\n};\n\nexport function sortSystemColorPalette(a: ColorSwatch, b: ColorSwatch) {\n  const aLevel = a.cssVar.split('-').at(-1) || '';\n  const bLevel = b.cssVar.split('-').at(-1) || '';\n  const first = aLevel in sortMap ? sortMap[aLevel] : Infinity;\n  const second = bLevel in sortMap ? sortMap[bLevel] : Infinity;\n  return first - second;\n}\n\nexport function buildPalette(prefix: string, tokens: Record<string, string>) {\n  return Object.entries(tokens).map(([value, varName]) =>\n    buildColorSwatch(varName, `${prefix}.${value}`)\n  );\n}\n\nexport function buildPaletteGroup(\n  prefix: string,\n  tokens: object,\n  sortFn?: (a: ColorSwatch, b: ColorSwatch) => number\n) {\n  return Object.entries(tokens)\n    .map(([key, value]) => {\n      if (typeof value === 'string') {\n        return buildColorSwatch(value, `${prefix}.${key}`);\n      } else {\n        const palette = buildPalette(`${prefix}.${key}`, value);\n        if (sortFn) {\n          return palette.sort(sortFn);\n        }\n        return palette;\n      }\n    })\n    .flat();\n}\n\nexport interface ColorSwatch {\n  /** The name of the CSS variable */\n  cssVar: string;\n  /** The formatted name of the JS variable */\n  jsVar: React.ReactNode;\n  /** The actual string value of the token */\n  value: string;\n  /** The purpose of the token */\n  purpose?: string;\n}\n\n/** builds color swatch objects for ColorGrid */\nexport function buildColorSwatch(varName: string, jsVarName: string): ColorSwatch {\n  // Get the CSS var's value from the :root element\n  const value = getComputedStyle(document.documentElement).getPropertyValue(varName);\n  return {\n    value,\n    cssVar: varName,\n    jsVar: formatJSVar(jsVarName),\n    purpose: purposeMap[jsVarName],\n  };\n}\n\ntype VariableType = 'css' | 'javascript' | 'all' | 'system';\n\nexport interface ColorGridProps {\n  name: string;\n  palette: ColorSwatch[];\n  variableType?: VariableType;\n}\n\n/** transform 'camelCase' names into 'spaced case' */\nexport function formatName(name: string) {\n  return name\n    .split(/(?=[A-Z])/)\n    .join(' ')\n    .toLowerCase();\n}\n\nfunction getSwatchStyles(token: ColorSwatch) {\n  // update the property to support linear gradients\n  // which need to be a background image instead of background color\n  const property = token.value.startsWith('linear-gradient(')\n    ? 'backgroundImage'\n    : 'backgroundColor';\n  return {[property]: `var(${token.cssVar})`};\n}\n\nfunction getHeadings(type: VariableType) {\n  const defaultHeadings = ['Swatch', 'Value'];\n  if (type === 'css') {\n    defaultHeadings.splice(1, 0, 'CSS Variable');\n  } else if (type === 'javascript') {\n    defaultHeadings.splice(1, 0, 'JS Variable');\n  } else if (type === 'system') {\n    defaultHeadings.splice(1, 0, 'CSS Variable', 'JS Variable');\n    defaultHeadings.push('Use Case');\n  } else {\n    defaultHeadings.splice(1, 0, 'CSS Variable', 'JS Variable');\n  }\n  return defaultHeadings;\n}\n\n/** A configuration of TokenGrid to quickly build tables for colors */\nexport function ColorGrid({name, variableType = 'all', palette}: ColorGridProps) {\n  return (\n    <TokenGrid caption={formatName(name)} headings={getHeadings(variableType)} rows={palette}>\n      {token => (\n        <>\n          <TokenGrid.RowItem>\n            <TokenGrid.Swatch style={getSwatchStyles(token)} />\n          </TokenGrid.RowItem>\n          {variableType !== 'javascript' && (\n            <TokenGrid.RowItem>\n              <TokenGrid.MonospaceLabel>{token.cssVar}</TokenGrid.MonospaceLabel>\n            </TokenGrid.RowItem>\n          )}\n          {variableType !== 'css' && (\n            <TokenGrid.RowItem>\n              <TokenGrid.MonospaceLabel>{token.jsVar}</TokenGrid.MonospaceLabel>\n            </TokenGrid.RowItem>\n          )}\n          <TokenGrid.RowItem>\n            <span>{token.value || 'none'}</span>\n          </TokenGrid.RowItem>\n          {variableType === 'system' && (\n            <TokenGrid.RowItem>\n              <span>{token.purpose}</span>\n            </TokenGrid.RowItem>\n          )}\n        </>\n      )}\n    </TokenGrid>\n  );\n}\n"],"names":["sortMap","purposeMap","sortSystemColorPalette","a","b","aLevel","bLevel","first","second","buildPalette","prefix","tokens","value","varName","buildColorSwatch","buildPaletteGroup","sortFn","key","palette","jsVarName","formatJSVar","formatName","name","getSwatchStyles","token","getHeadings","type","defaultHeadings","ColorGrid","variableType","jsx","TokenGrid","jsxs","Fragment"],"mappings":"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"}