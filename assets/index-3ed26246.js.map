{"version":3,"file":"index-3ed26246.js","sources":["../../../../../packages/canvas-tokens-docs/components/ColorGrid.tsx","../../../../../packages/canvas-tokens-docs/components/Stack/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport {TokenGrid, formatJSVar} from './TokenGrid';\n\nexport interface ColorSwatch {\n  /** The name of the CSS variable */\n  cssVar: string;\n  /** The formatted name of the JS variable */\n  jsVar: React.ReactNode;\n  /** The actual string value of the token */\n  value: string;\n}\n\n/** builds color swatch objects for ColorGrid */\nexport function buildColorSwatch(varName: string, jsVarName: string): ColorSwatch {\n  // Get the CSS var's value from the :root element\n  const value = getComputedStyle(document.documentElement).getPropertyValue(varName);\n  return {\n    value,\n    cssVar: varName,\n    jsVar: formatJSVar(jsVarName),\n  };\n}\n\ninterface ColorGridProps {\n  name: string;\n  palette: ColorSwatch[];\n}\n\n/** transform 'camelCase' names into 'spaced case' */\nfunction formatName(name: string) {\n  return name\n    .split(/(?=[A-Z])/)\n    .join(' ')\n    .toLowerCase();\n}\n\nfunction getSwatchStyles(token: ColorSwatch) {\n  // update the property to support linear gradients\n  // which need to be a background image instead of background color\n  const property = token.value.startsWith('linear-gradient(')\n    ? 'backgroundImage'\n    : 'backgroundColor';\n  return {[property]: `var(${token.cssVar})`};\n}\n\n/** A configuration of TokenGrid to quickly build tables for colors */\nexport function ColorGrid(props: ColorGridProps) {\n  return (\n    <TokenGrid\n      caption={formatName(props.name)}\n      headings={['Swatch', 'CSS Variable', 'JS Variable', 'Value']}\n      rows={props.palette}\n    >\n      {token => (\n        <>\n          <TokenGrid.RowItem>\n            <TokenGrid.Swatch style={getSwatchStyles(token)} />\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.cssVar}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.jsVar}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            <span>{token.value}</span>\n          </TokenGrid.RowItem>\n        </>\n      )}\n    </TokenGrid>\n  );\n}\n","import React from 'react';\nimport './index.css';\n\ninterface StackProps {\n  children: React.ReactNode;\n}\n\nexport function Stack({children}: StackProps) {\n  return <div className=\"stack\">{children}</div>;\n}\n"],"names":["buildColorSwatch","varName","jsVarName","formatJSVar","formatName","name","getSwatchStyles","token","ColorGrid","props","jsx","TokenGrid","jsxs","Fragment","Stack","children"],"mappings":"2GAaO,SAAAA,EAAAC,EAAAC,EAAA,CAGL,MAAA,CAAO,MADP,iBAAA,SAAA,eAAA,EAAA,iBAAAD,CAAA,EAEE,OAAAA,EACQ,MAAAE,EAAAD,CAAA,CACoB,CAEhC,CAQA,SAAAE,EAAAC,EAAA,CACE,OAAAA,EAAA,MAAA,WAAA,EAAA,KAAA,GAAA,EAAA,aAIF,CAEA,SAAAC,EAAAC,EAAA,CAME,MAAA,CAAA,CAHAA,EAAA,MAAA,WAAA,kBAAA,EAAA,kBAAA,iBAGA,EAAA,OAAAA,EAAA,MAAA,IACF,CAGO,SAAAC,EAAAC,EAAA,CACL,OAAAC,EACEC,EAAC,CAAA,QAAAP,EAAAK,EAAA,IAAA,EAC+B,SAAA,CAAA,SAAA,eAAA,cAAA,OAAA,EAC6B,KAAAA,EAAA,QAC/C,SAAAF,GAAAK,EAAAC,EAAA,CAAA,SAAA,CAIRH,EAAAC,EAAA,QAAA,CAAA,SAAAD,EAAAC,EAAA,OAAA,CAAA,MAAAL,EAAAC,CAAA,CAAA,CAAA,CAAA,CAAA,EAEAG,EAAAC,EAAA,QAAA,CAAA,SAAAD,EAAAC,EAAA,eAAA,CAAA,SAAAJ,EAAA,MAAA,CAAA,CAAA,CAAA,EAGAG,EAAAC,EAAA,QAAA,CAAA,SAAAD,EAAAC,EAAA,eAAA,CAAA,SAAAJ,EAAA,KAAA,CAAA,CAAA,CAAA,EAGAG,EAAAC,EAAA,QAAA,CAAA,SAAAD,EAAA,OAAA,CAAA,SAAAH,EAAA,KAAA,CAAA,CAAA,CAAA,CAGA,EAAA,CACF,CAAA,CAIR,yfChEO,SAAAO,EAAA,CAAA,SAAAC,GAAA,CACL,OAAAL,EAAA,MAAA,CAAA,UAAA,QAAA,SAAAK,CAAA,CAAA,CACF"}