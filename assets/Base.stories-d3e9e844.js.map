{"version":3,"file":"Base.stories-d3e9e844.js","sources":["../../../../../packages/canvas-tokens-docs/stories/base/examples/BaseUnit.tsx","../../../../../packages/canvas-tokens-docs/stories/base/Base.stories.mdx"],"sourcesContent":["import * as React from 'react';\nimport {base} from '@workday/canvas-tokens-web';\nimport {TokenGrid} from '../../../components/TokenGrid';\n\nfunction getPixelValue(value: string) {\n  // Strip 'rem' from the string, convert to a number, and multiply by 16\n  const pxValue = Number(value.replace('rem', '')) * 16;\n  return `${pxValue}px`;\n}\n\nconst value = getComputedStyle(document.documentElement).getPropertyValue(base.baseUnit);\nconst pxValue = getPixelValue(value);\nconst baseUnitToken = {\n  label: base.baseUnit,\n  value,\n  pxValue,\n};\n\nexport const BaseUnit = () => {\n  return (\n    <TokenGrid\n      caption=\"Base Unit\"\n      headings={['Sample', 'CSS Variable', 'Value', 'Pixel Value']}\n      rows={[baseUnitToken]}\n    >\n      {token => (\n        <>\n          <TokenGrid.RowItem>\n            <TokenGrid.Sample\n              style={{\n                width: `var(${token.label})`,\n                backgroundColor: `var(${base.blueberry400})`,\n              }}\n            />\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.label}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>{token.value}</TokenGrid.RowItem>\n          <TokenGrid.RowItem>{token.pxValue}</TokenGrid.RowItem>\n        </>\n      )}\n    </TokenGrid>\n  );\n};\n","import {Meta, Unstyled} from '@storybook/blocks';\n\nimport {\n  AIColorTokens,\n  PrimaryColorTokens,\n  NeutralColorTokens,\n  TypeColorTokens,\n  StatusColorTokens,\n  OtherColorTokens,\n} from './examples/Color';\nimport {BaseUnit} from './examples/BaseUnit';\n\n<Meta title=\"Docs/Base Tokens\" />\n\n<Unstyled>\n\n# Base Tokens\n\nBase tokens are the foundation of our token system. They provide the core values for our brand and\nsystem tokens. Base tokens are **not themed variables**, so you should generally opt to use system\nand brand tokens first. However, if you're not concerned with theming a particular property, using a\nbase token directly is an acceptable option.\n\n## Usage\n\nBase tokens can be consumed as a JavaScript / TypeScript object. Each token value references a CSS\nvariable, so you'll need to have the CSS variables imported in your application as well. This is\ndiscussed further in the [Getting Started guide](/docs/docs-getting-started--docs). Unlike\nJavaScript variables, CSS custom properties (variables) need to be wrapped in `var()` to be valid.\nIf you're new to CSS variables, it might take a bit for that to feel intuitive.\n\n> In the example below, we're importing CSS variables in the file directly for clarity. But you'll\n> likely want to do this at the top-level of your application to avoid redundancy and\n> unintentionally overwriting values.\n\n```ts\n// styles.ts\nimport '@workday/canvas-tokens-web/css/base/_variables.css';\nimport {base} from '@workday/canvas-tokens-web';\n\nconst styles = {\n  backgroundColor: `var(${base.blueberry400})`,\n  color: `var(${base.frenchVanilla100})`,\n};\n```\n\nThey can also be consumed as CSS, Sass, or Less variables. In the example below, we're applying the\nsame styles using CSS variables directly.\n\n```css\n// styles.css\n@import '@workday/canvas-tokens-web/css/base/_variables.css';\n\n.button {\n  background-color: var(--cnvs-base-palette-blueberry-400);\n  color: var(--cnvs-base-palette-french-vanilla-100);\n}\n```\n\n---\n\n## Base Unit\n\nThe base unit token provides a base value to derive our system space and shape tokens. You could use\nthis value to build other scales, but unless you're very familiar with our token system, we\nrecommend you treat this as an internal variable, as changing it could have a drastic effect on your\nUI.\n\n<BaseUnit />\n\n---\n\n## Color\n\nBase colors provide the core palettes that make up our UI. There are twenty-seven palettes in total,\nbut only a handful are used regularly. These palettes don't have any inherent contextual meaning on\nwhen and where they should be used. However, to provide some guidance, we've grouped them\nsemantically: primary, neutral, type, status, and other.\n\n### Primary\n\nBlueberry is our primary color and the most prominent palette in our UI. We use it for our primary\nbuttons, links, focus outlines, and more.\n\n<PrimaryColorTokens />\n\n---\n\n### Neutral\n\nWe have four neutral palettes: french vanilla, soap, licorice, and black pepper. These colors are\nused for our backgrounds, foregrounds, icons, and text.\n\n<NeutralColorTokens />\n\n---\n\n### Type\n\nOur type colors are used for headings, text, and icons. Maintaining sufficient contrast is an\nimportant consideration when choosing any type color. Consider where your type will render as well\nas any focus, active, and hover states.\n\n<TypeColorTokens />\n\n---\n\n### Status\n\nThese palettes are reserved to indicate the status of a particular object, task, or flow. These\npalettes are generally better suited for backgrounds than text, as they have difficulty meeting our\ncontrast ratios guidelines. Also remember to always communicate status with more than color alone.\n\n<StatusColorTokens />\n\n---\n\n### AI\n\nThis palette is reserved to indicate the use of artificial intelligence, such as loading or generating content.\n\n<AIColorTokens />\n\n---\n\n### Other\n\nOur other palettes have little-to-no usage in our UI outside of data visualization. Please, use\nthese sparingly.\n\n<OtherColorTokens />\n\n---\n\n</Unstyled>\n"],"names":["getPixelValue","value","base.baseUnit","pxValue","baseUnitToken","BaseUnit","jsx","TokenGrid","jsxs","Fragment","token","base.blueberry400","_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Unstyled","PrimaryColorTokens","NeutralColorTokens","TypeColorTokens","StatusColorTokens","AIColorTokens","OtherColorTokens","MDXContent","MDXLayout","__page","componentMeta","__namedExportsOrder"],"mappings":"mgBAIA,SAASA,EAAcC,EAAe,CAGpC,MAAO,GADS,OAAOA,EAAM,QAAQ,MAAO,EAAE,CAAC,EAAI,EAClC,IACnB,CAEA,MAAMA,EAAQ,iBAAiB,SAAS,eAAe,EAAE,iBAAiBC,CAAa,EACjFC,EAAUH,EAAcC,CAAK,EAC7BG,EAAgB,CACpB,MAAOF,EACP,MAAAD,EACA,QAAAE,CACF,EAEaE,EAAW,IAEpBC,EAACC,EAAA,CACC,QAAQ,YACR,SAAU,CAAC,SAAU,eAAgB,QAAS,aAAa,EAC3D,KAAM,CAACH,CAAa,EAEnB,YAEGI,EAAAC,EAAA,CAAA,SAAA,CAACH,EAAAC,EAAU,QAAV,CACC,SAAAD,EAACC,EAAU,OAAV,CACC,MAAO,CACL,MAAO,OAAOG,EAAM,KAAK,IACzB,gBAAiB,OAAOC,CAAiB,GAC3C,CAAA,CAAA,EAEJ,EACAL,EAACC,EAAU,QAAV,CACC,SAAAD,EAACC,EAAU,eAAV,CAA0B,SAAMG,EAAA,KAAA,CAAM,CACzC,CAAA,EACCJ,EAAAC,EAAU,QAAV,CAAmB,WAAM,MAAM,EAC/BD,EAAAC,EAAU,QAAV,CAAmB,WAAM,QAAQ,CAAA,EACpC,CAAA,CAAA,ECjCR,SAASK,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,EAAG,IACH,OAAQ,SACR,GAAI,KACJ,EAAG,IACH,KAAM,OACN,WAAY,aACZ,IAAK,MACL,GAAI,KACJ,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAoBG,EAAMC,EAAW,CACnC,SAAU,CAAcC,EAAKC,EAAM,CACjC,MAAO,kBACb,CAAK,EAAG;AAAA,EAAmBH,EAAMI,EAAU,CACrC,SAAU,CAAcF,EAAKJ,EAAY,GAAI,CAC3C,GAAI,cACJ,SAAU,aAClB,CAAO,EAAgBE,EAAMF,EAAY,EAAG,CACpC,SAAU,CAAC;AAAA,iCAAoJI,EAAKJ,EAAY,OAAQ,CACtL,SAAU,sBACX,CAAA,EAAG;AAAA;AAAA,6CAAiM,CAC7M,CAAO,EAAgBI,EAAKJ,EAAY,GAAI,CACpC,GAAI,QACJ,SAAU,OAClB,CAAO,EAAgBE,EAAMF,EAAY,EAAG,CACpC,SAAU,CAAC;AAAA;AAAA,2BAAgPI,EAAKJ,EAAY,EAAG,CAC7Q,KAAM,mCACN,SAAU,uBACX,CAAA,EAAG;AAAA,gFAAyGI,EAAKJ,EAAY,KAAM,CAClI,SAAU,OACX,CAAA,EAAG;AAAA,gFAAgG,CAC5G,CAAO,EAAgBE,EAAMF,EAAY,WAAY,CAC7C,SAAU,CAAC;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CAChD,SAAU;AAAA;AAAA,oCACX,CAAA,EAAG;AAAA,CAAI,CAChB,CAAO,EAAgBI,EAAKJ,EAAY,IAAK,CACrC,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CACpB,CAAS,CACT,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU;AAAA,0CAClB,CAAO,EAAgBI,EAAKJ,EAAY,IAAK,CACrC,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,eACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CACpB,CAAS,CACT,CAAO,EAAgBI,EAAKJ,EAAY,GAAI,CAAE,CAAA,EAAgBI,EAAKJ,EAAY,GAAI,CAC3E,GAAI,YACJ,SAAU,WAClB,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU;AAAA;AAAA;AAAA,IACX,CAAA,EAAgBI,EAAKb,EAAU,CAAA,CAAE,EAAgBa,EAAKJ,EAAY,GAAI,CAAA,CAAE,EAAgBI,EAAKJ,EAAY,GAAI,CAC5G,GAAI,QACJ,SAAU,OAClB,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU;AAAA;AAAA;AAAA,yDAClB,CAAO,EAAgBI,EAAKJ,EAAY,GAAI,CACpC,GAAI,UACJ,SAAU,SAClB,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU;AAAA,0CACX,CAAA,EAAgBI,EAAKG,EAAoB,CAAA,CAAE,EAAgBH,EAAKJ,EAAY,GAAI,CAAA,CAAE,EAAgBI,EAAKJ,EAAY,GAAI,CACtH,GAAI,UACJ,SAAU,SAClB,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU;AAAA,wDACX,CAAA,EAAgBI,EAAKI,EAAoB,CAAA,CAAE,EAAgBJ,EAAKJ,EAAY,GAAI,CAAA,CAAE,EAAgBI,EAAKJ,EAAY,GAAI,CACtH,GAAI,OACJ,SAAU,MAClB,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU;AAAA;AAAA,wCACX,CAAA,EAAgBI,EAAKK,EAAiB,CAAA,CAAE,EAAgBL,EAAKJ,EAAY,GAAI,CAAA,CAAE,EAAgBI,EAAKJ,EAAY,GAAI,CACnH,GAAI,SACJ,SAAU,QAClB,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU;AAAA;AAAA,mGACX,CAAA,EAAgBI,EAAKM,EAAmB,CAAA,CAAE,EAAgBN,EAAKJ,EAAY,GAAI,CAAA,CAAE,EAAgBI,EAAKJ,EAAY,GAAI,CACrH,GAAI,KACJ,SAAU,IAClB,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU,iHACX,CAAA,EAAgBI,EAAKO,EAAe,CAAA,CAAE,EAAgBP,EAAKJ,EAAY,GAAI,CAAA,CAAE,EAAgBI,EAAKJ,EAAY,GAAI,CACjH,GAAI,QACJ,SAAU,OAClB,CAAO,EAAgBI,EAAKJ,EAAY,EAAG,CACnC,SAAU;AAAA,iBAClB,CAAO,EAAgBI,EAAKQ,EAAkB,CAAE,CAAA,EAAgBR,EAAKJ,EAAY,GAAI,CAAA,CAAE,CAAC,CACxF,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASa,EAAWd,EAAQ,GAAI,CAC9B,KAAM,CACJ,QAASe,CACb,EAAM,OAAO,OAAO,CAAE,EAAEb,EAAkB,EAAIF,EAAM,UAAU,EAC5D,OAAOe,EAAyBV,EAAKU,EAAW,CAC9C,GAAGf,EACH,SAAuBK,EAAKN,EAAmB,CAC7C,GAAGC,CACT,CAAK,CACL,CAAG,EAAID,EAAkBC,CAAK,CAC9B,CAEY,MAACgB,EAAS,IAAM,CAC1B,MAAM,IAAI,MAAM,iBAAiB,CACnC,EACAA,EAAO,WAAa,CAClB,SAAU,EACZ,EACK,MAACC,EAAgB,CACpB,MAAO,mBACP,KAAM,CAAC,aAAa,EACpB,eAAgB,CAAC,QAAQ,CAC3B,EACAA,EAAc,WAAaA,EAAc,YAAc,GACvDA,EAAc,WAAW,KAAO,CAC9B,GAAIA,EAAc,WAAW,MAAQ,GACrC,KAAMH,CACR,EAC4B,MAAAI,EAAA,CAAA,QAAA"}