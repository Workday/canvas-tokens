{"version":3,"file":"ColorGrid-96949da1.js","sources":["../../../../../packages/canvas-tokens-docs/components/ColorGrid.tsx"],"sourcesContent":["import * as React from 'react';\nimport {TokenGrid} from './TokenGrid';\n\nexport interface ColorSwatch {\n  value: string;\n  varName: string;\n}\n\n/** builds color swatch objects for ColorGrid */\nexport function buildColorSwatch(varName: string): ColorSwatch {\n  // Get the CSS var's value from the :root element\n  const value = getComputedStyle(document.documentElement).getPropertyValue(varName);\n  return {\n    value,\n    varName,\n  };\n}\n\ninterface ColorGridProps {\n  name: string;\n  palette: ColorSwatch[];\n}\n\n/** transform 'camelCase' names into 'spaced case' */\nfunction formatName(name: string) {\n  return name\n    .split(/(?=[A-Z])/)\n    .join(' ')\n    .toLowerCase();\n}\n\nfunction getSwatchStyles(token: ColorSwatch) {\n  // linear gradients need to be background images\n  if (token.value.startsWith('linear-gradient(')) {\n    return {backgroundImage: `var(${token.varName})`};\n    // everything else can be a background color\n  } else {\n    return {backgroundColor: `var(${token.varName})`};\n  }\n}\n\n/** A configuration of TokenGrid to quickly build tables for colors */\nexport function ColorGrid(props: ColorGridProps) {\n  return (\n    <TokenGrid\n      caption={formatName(props.name)}\n      headings={['Swatch', 'CSS Variable', 'Value']}\n      rows={props.palette}\n    >\n      {token => (\n        <>\n          <TokenGrid.RowItem>\n            <TokenGrid.Swatch style={getSwatchStyles(token)} />\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.varName}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n          <TokenGrid.RowItem>\n            <TokenGrid.MonospaceLabel>{token.value}</TokenGrid.MonospaceLabel>\n          </TokenGrid.RowItem>\n        </>\n      )}\n    </TokenGrid>\n  );\n}\n"],"names":["buildColorSwatch","varName","formatName","name","getSwatchStyles","token","ColorGrid","props","jsx","TokenGrid","jsxs","Fragment"],"mappings":"oGASO,SAAAA,EAAAC,EAAA,CAGL,MAAA,CAAO,MADP,iBAAA,SAAA,eAAA,EAAA,iBAAAA,CAAA,EAEE,QAAAA,CACA,CAEJ,CAQA,SAAAC,EAAAC,EAAA,CACE,OAAAA,EAAA,MAAA,WAAA,EAAA,KAAA,GAAA,EAAA,aAIF,CAEA,SAAAC,EAAAC,EAAA,CAEE,OAAAA,EAAA,MAAA,WAAA,kBAAA,EACE,CAAA,gBAAA,OAAAA,EAAA,YAGA,CAAA,gBAAA,OAAAA,EAAA,WAEJ,CAGO,SAAAC,EAAAC,EAAA,CACL,OAAAC,EACEC,EAAC,CAAA,QAAAP,EAAAK,EAAA,IAAA,EAC+B,SAAA,CAAA,SAAA,eAAA,OAAA,EACc,KAAAA,EAAA,QAChC,SAAAF,GAAAK,EAAAC,EAAA,CAAA,SAAA,CAIRH,EAAAC,EAAA,QAAA,CAAA,SAAAD,EAAAC,EAAA,OAAA,CAAA,MAAAL,EAAAC,CAAA,CAAA,CAAA,CAAA,CAAA,EAEAG,EAAAC,EAAA,QAAA,CAAA,SAAAD,EAAAC,EAAA,eAAA,CAAA,SAAAJ,EAAA,OAAA,CAAA,CAAA,CAAA,EAGAG,EAAAC,EAAA,QAAA,CAAA,SAAAD,EAAAC,EAAA,eAAA,CAAA,SAAAJ,EAAA,KAAA,CAAA,CAAA,CAAA,CAGA,EAAA,CACF,CAAA,CAIR"}